*wiki.txt*  A bare-Vim wiki, version 0.01a

==============================================================================
CONTENTS                                                            *wiki-index*
                           *wiki*

    1. Intro                                    |wiki-intro|
        1.1. Usage examples                     |wiki-usage-examples|
        1.2. |wiki| help                           |wiki-helphelp|
             |wiki-help-cheatsheet|, |wiki-cheatsheet|

    2. Install                                  |wiki-install|
             |wiki-install-recommended|  |wiki-install-Vimball|
             |wiki-install-root|  |wiki-prv|

    3. Options, variables and general settings  |wiki-settings|
                                                |wiki-options|
             |prv_g:prv|  |wiki-leaders|  |prv_leader|  |prv_localleader| 
             |wiki-hack-settings|

    4. Mappings                                 |wiki-mappings|

    5. Commands                                 |wiki-commands|
             |wiki-main-commands|  |wiki-util-commands|

    6. Functions                                |wiki-functions|
             |wiki-implementation|

    7. Files                                    |wiki-files|
             |prv.vim|  |prv.txt|

    8. Final words                              |wiki-final-words|
        8.1. Advantages and drawbacks of |prv|     |wiki-compare|
        8.2. Further work / Todo                |wiki-todo|
        8.4. Disclaimer                         |wiki-disclaimer|
        8.5. License                            |wiki-license|
        8.6. Acknowledgements                   |wiki-ack|
        8.7. Contact                            |wiki-contact|

==============================================================================
1. Intro                                                       *wiki-intro*


tags (help, wiki, source code)
    - declared as :tag: or any other pure tag mode
    - entailed by file structure (section, class, function, folding, etc)
* file paths
* generic text searches in file names (fuzzyfinder?) and contents (lgrep)

------------------------------------------------------------------------------
                                                                    *wiki*
                                                               *bare-vim-wiki*

The bare Vim should yield a very simple and functional system:
* use Vim's standard tagging mechanisms.
  Tags have to be extracted from the source files, and organized, in order to
  enable the navigation of tags. See |prv-tags-navigation|
* use Vim's standard file navigation mechanisms.  File navigation is always
  enabled.  Beyond absolute and relative paths, one might enable directories
  in 'path' for files to be searched for.  See |prv-file-navigation|

Long term goals are:
* exploit deeply the concept of a "reactwiki": hypertexts with executable
  code.
* exploit deeply the concept of 'Vim as an aplication platform' (described in |calendar.vim|).
* integrate with |aa| and the rest of PRV.  See |aa-related-plugins|

Other characteristics:
* it might be condensed in just a handful of standard Vim settings
  with optional advanced functions
* it should be very friendly to making collage of files to render, e.g. a
  latex or HTML file (pandoc? middleman? vimwiki?).
* Git versioning
* optional integration: calendar.vim, gmail.vim

Todo:
* collapse section titles and tags, make syntax collapse

                                                            *wiki-tags-navigation*
* list of directory patterns to make the tags file
* keep 'tags' option with all the tags files generated
  * only one? yes. see :h user_29 / ONE TAGS FILE
  * generate many tags files for different projects/file trees? No, see above
* use tnext, tselect to handle multiple matches of c-[
* use c-t

See |tagsrch.txt|

                                                            *wiki-file-navigation*
* use |gf|, [f, ]f, ^Wf, |:find|, |:sfind|, |:tabfind| etc (which other commands?), to follow pages
  i.e. entries (verbetes/termos para artigos e notas)
* use a directories in 'path' as wiki roots,  
* use .wiki, .md and .markdown as extensions (and e.g. *.mwiki?)
* use 'includeexpr' for further search when file is not found
* write token or word with starting / or . if internal link intended,
  but any word might be followed to the corresponding file.

* set what are the file chars in option 'isf'
* set the directories of the wikis in 'path'
* add wiki and md as prefixes in option 'sua'
* manage to link paths of wiki pages and of repository trees.
  E.g. .py files use a specific &path, .vim files, other &path etc...

See 'path'
                                                            *wiki-help-navigation*
* reuse Vim's capabilities with help files and (parallel help files?) with
  tags and searching (and what more?).

                                                     *wiki-vimwiki-considerations*
* Vimwiki ? standard setting suffice. VS help files VS bare markdown or Media wiki
* If the markdown syntax chosen is Vimwiki syntax compatible, it will be possible
  to convert the wiki to HTML with Vimwiki's routines.
* Ok that Vim navigates through paths, tokens might be marked with standard OS notation
  (e.g. ./myterm), and that most important files might be reached with
  uppercase markers.
* Vimwiki is still useful in the headings mappings, and manipulating lists.
* Vimwiki tables are not used by me. Maybe I need to experiment with them.

                *wiki-todo*
* make wiki ok:
  - read about tags, take notes and define strategy
  - read about file navigation, notes and strategy
  - migrate all wiki notes and other notes to the framework
                                                     *prv-fzf*
 vim:ma:noro:tw=78:ts=8:ft=help:sua+=.txt:norl:sts=4:sw=4:et:
